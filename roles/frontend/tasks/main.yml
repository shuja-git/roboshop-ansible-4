#    INFO
#    Try to access the nginx service once more over the browser and ensure you get roboshop content.
#
#    Create Nginx Reverse Proxy Configuration.
#
#    vim /etc/nginx/default.d/roboshop.conf
#
#    Add the following content
#
#    /etc/nginx/default.d/roboshop.conf
#    proxy_http_version 1.1;
#    location /images/ {
#    expires 5s;
#    root   /usr/share/nginx/html;
#    try_files $uri /images/placeholder.jpg;
#  }
#    location /api/catalogue/ { proxy_pass http://localhost:8080/; }
#    location /api/user/ { proxy_pass http://localhost:8080/; }
#    location /api/cart/ { proxy_pass http://localhost:8080/; }
#    location /api/shipping/ { proxy_pass http://localhost:8080/; }
#    location /api/payment/ { proxy_pass http://localhost:8080/; }
#
#    location /health {
#    stub_status on;
#    access_log off;
#  }
#
#    NOTE
#    Ensure you replace the localhost with the actual ip address of those component server. Word localhost is just used to avoid the failures on the Nginx Server.
#
#    Restart Nginx Service to load the changes of the configuration.
#
#    systemctl restart nginx

- name: Install nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

- name:  Remove the directory
  ansible.builtin.file:
    path: /usr/share/nginx/html/
    state: absent

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /usr/share/nginx/html/
    state: directory

- name: Download and extract frontend contents
  ansible.builtin.unarchive:
    src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
    dest: /usr/share/nginx/html
    remote_src: yes

- name: Copy Nginx Reverse Proxy Configuration
  ansible.builtin.copy:
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf

- name: Start Nginx
  ansible.builtin.systemd_service:
    state: started
    name: nginx